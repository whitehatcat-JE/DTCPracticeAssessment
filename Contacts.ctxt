#BlueJ class context
comment0.target=Contacts
comment1.params=name
comment1.target=java.lang.String\ capitalize(java.lang.String)
comment1.text=\r\n\ Capitalizes\ each\ word\ in\ a\ given\ string\r\n\ @param\ name\ \ the\ string\ to\ be\ capitalized\r\n\ @return\ capName\ \ the\ capitalized\ variation\ of\ the\ string\r\n
comment10.params=newSearch
comment10.target=void\ storeSearchName(java.lang.String)
comment10.text=\r\n\ Stores\ the\ currently\ inputted\ search\ name\r\n\ @param\ newSearch\ \ text\ from\ the\ searchName\ text\ field\r\n
comment11.params=newName
comment11.target=void\ storeNewName(java.lang.String)
comment11.text=\r\n\ Stores\ the\ currently\ inputted\ new\ name\r\n\ @param\ newName\ \ text\ from\ the\ adding\ name\ text\ field\r\n
comment12.params=newNumber
comment12.target=void\ storeNewNumber(java.lang.String)
comment12.text=\r\n\ Stores\ the\ currently\ inputted\ new\ number\r\n\ @param\ newNumber\ \ text\ from\ the\ adding\ number\ text\ field\r\n
comment13.params=newFilename
comment13.target=void\ storeNewFilename(java.lang.String)
comment13.text=\r\n\ Stores\ the\ currently\ inputted\ new\ filename\r\n\ @param\ newFilename\ \ text\ from\ the\ adding\ filename\ text\ field\r\n
comment14.params=
comment14.target=void\ addContact()
comment14.text=\r\n\ Adds\ the\ new\ contact\r\n
comment15.params=args
comment15.target=void\ main(java.lang.String[])
comment15.text=\r\n\ Manages\ the\ contacts\ list,\ allowing\ for\ adding/retrieving\ of\ contacts.\r\n
comment2.params=name
comment2.target=java.lang.Boolean\ duplicate(java.lang.String)
comment2.text=\r\n\ Checks\ if\ the\ given\ name\ has\ already\ been\ added\ to\ the\ contacts\r\n\ list.\r\n\ @param\ name\ \ the\ name\ to\ check\r\n\ @return\ exists\ \ returns\ True\ if\ the\ name\ has\ previously\ been\ added.\r\n
comment3.params=fileSpace
comment3.target=java.lang.Boolean\ checkFile(java.lang.String)
comment3.text=\r\n\ Checks\ if\ the\ given\ filename\ points\ to\ an\ actual\ file.\r\n\ @param\ fileSpace\ \ the\ given\ filename\r\n\ @return\ compatible\ \ returns\ True\ if\ filename\ points\ to\ a\ working\ file.\r\n
comment4.params=file\ name\ number
comment4.target=void\ addContact(java.lang.String,\ java.lang.String,\ java.lang.String)
comment4.text=\r\n\ Adds\ a\ given\ name,\ number\ and\ pic\ to\ the\ contacts\ list.\r\n\ @param\ file\ \ the\ filename\ for\ the\ profile\ image\r\n\ @param\ name\ \ contact's\ name\r\n\ @param\ number\ \ contact's\ phone\ number\ (NOTE\:\ String\ since\ "\ "\ and\ "-"\r\n\ \ \ \ \ \ exist\ inside\ of\ phone\ numbers)\r\n
comment5.params=name
comment5.target=java.lang.String[]\ getContact(java.lang.String)
comment5.text=\r\n\ Finds\ a\ contact's\ info\ when\ given\ their\ name.\r\n\ @param\ name\ \ contact's\ name\r\n\ @return\ [number,\ fileName]\ \ the\ contact's\ info\r\n
comment6.params=name\ contactInfo
comment6.target=void\ displayContact(java.lang.String,\ java.lang.String[])
comment6.text=\r\n\ Displays\ a\ given\ contact\ onto\ the\ GUI\r\n\ @param\ name\ \ name\ of\ contact\r\n\ @param\ contactInfo\ number/file\ of\ contact\r\n
comment7.params=
comment7.target=void\ displayAll()
comment7.text=\r\n\ Sifts\ through\ every\ contact\ in\ the\ list\ and\ displays\ them\ all\ in\ the\ GUI.\r\n\ However,\ since\ I\ am\ going\ for\ a\ non-scrollable\ approach,\ this\ means\ that\r\n\ I\ will\ have\ to\ implement\ a\ hard\ limit\ on\ the\ amount\ of\ contacts\ someone\r\n\ can\ add\ (Likely\ around\ a\ couple\ dozen)\r\n
comment8.params=
comment8.target=void\ hideInfo()
comment8.text=\r\n\ Clears\ all\ information\ on\ the\ screen,\ except\ for\ any\ profile\ images.\r\n
comment9.params=
comment9.target=void\ search()
comment9.text=\r\n\ Searches\ and\ displays\ the\ searched\ name\r\n
numComments=16
